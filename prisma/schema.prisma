generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime
  User              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model ResetPasswordToken {
  id      String   @id
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model TwoFactorConfirmation {
  id     String @id
  userId String @unique
  User   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model TwoFactorToken {
  id      String   @id
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model User {
  id                    String                 @id
  name                  String?
  email                 String                 @unique
  emailVerified         DateTime?
  image                 String?
  createdAt             DateTime               @default(now())
  updatedAt             DateTime
  isTwoFactorEnabled    Boolean                @default(false)
  password              String?
  role                  UserRole               @default(CUSTOMER)
  Account               Account[]
  TwoFactorConfirmation TwoFactorConfirmation?
}

model VerificationToken {
  token   String   @unique
  expires DateTime
  email   String
  id      String   @id

  @@unique([email, token])
}

enum UserRole {
  CUSTOMER
  ADMIN
}
